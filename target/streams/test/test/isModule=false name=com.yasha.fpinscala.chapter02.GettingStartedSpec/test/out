[0m[[0minfo[0m] [0m[32mGettingStartedSpec:[0m[0m
[0m[[0minfo[0m] [0m[32mfib[0m[0m
[0m[[0minfo[0m] [0m[32m- should return the proper value for any fibonacci number request[0m[0m
[0m[[0minfo[0m] [0m[32misSorted[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true for empty arrays[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true for arrays of length 1[0m[0m
[0m[[0minfo[0m] [0m[32m- should return true for sorted arrays of length > 1[0m[0m
[0m[[0minfo[0m] [0m[32m- should return false for unsorted arrays of length > 1[0m[0m
[0m[[0minfo[0m] [0m[32mcurry[0m[0m
[0m[[0minfo[0m] [0m[32m- should not alter the effect of a function[0m[0m
[0m[[0minfo[0m] [0m[32muncurry[0m[0m
[0m[[0minfo[0m] [0m[32m- should not alter the effect of a function[0m[0m
[0m[[0minfo[0m] [0m[32mcompose[0m[0m
[0m[[0minfo[0m] [0m[32m- should work like andThen from the standard lib[0m[0m
